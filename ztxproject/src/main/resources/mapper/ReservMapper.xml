<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ReservMapper">
	<insert id="addReserv" parameterType="com.example.demo.dto.ReservDto" useGeneratedKeys="true" keyProperty="reservid">
		INSERT INTO reservlist
		(routeid, routeDeparture, routeArrival, routeTime, routeArrivalTime, resnum, charge, reservday, PNR, userid)
		VALUES (#{routeid}, #{routeDeparture}, #{routeArrival}, #{routeTime}, #{routeArrivalTime}, #{resnum}, #{charge}, now(), #{PNR}, #{userid})
	</insert>
	<select id="getSeatid" parameterType="map" resultType="int">
		SELECT seatid FROM trainseat WHERE seatnum = #{trim} and routeid=#{routeid}
	</select>
	<update id="upTrainSeatAvai" parameterType="com.example.demo.dto.ReservDto">
		UPDATE trainseat SET reserv=0, resid= #{reservid} WHERE routeid = #{routeid} AND seatid = #{seatid}
	</update>
	<update id="upRouteSeat" parameterType="com.example.demo.dto.ReservDto">
		UPDATE routes SET seat=(seat-#{resnum}) WHERE routeid = #{routeid}
	</update>
	
	<select id="list" resultType="com.example.demo.dto.ReservDto">
		select * from reservlist where userid = #{userid} order by reservid desc limit ${index},10
	</select>
	
	<select id="getChong" resultType="Integer">
	  select ceil( count(*)/10 ) from reservlist where userid= #{userid}
	</select>

	<select id="getRsvanow" resultType="com.example.demo.dto.ReservDto">
		SELECT r.*, ro.*, COUNT(r.reservid) AS reservCount FROM reservlist r JOIN routes ro
		ON r.routeid = ro.routeid WHERE ro.departure_time >= NOW() GROUP BY r.routeid
		ORDER BY ro.departure_time
	</select>
	<select id="getRsvByDate" resultType="com.example.demo.dto.ReservDto">
		SELECT r.*, ro.*, COUNT(r.reservid) as reservCount FROM reservlist r JOIN routes ro
		ON r.routeid = ro.routeid WHERE DATE(ro.departure_time) = #{selectedDate}
		GROUP BY r.routeid ORDER BY ro.departure_time
	</select>
	<select id="getAvaiSeatCountByRouteid" resultType="map">
		SELECT routeid, COUNT(*) AS availableSeats FROM trainseat WHERE reserv = 1 GROUP BY routeid
	</select>
	
	<select id="getSeatCountByReservid" resultType="int" parameterType="int">
		SELECT COUNT(*) FROM trainseat WHERE resid = #{reservid}
	</select>
	<select id="getRsvdetail" resultType="com.example.demo.dto.ReservDto">
		SELECT r.*, ro.* FROM reservlist r JOIN routes ro ON r.routeid = ro.routeid
		WHERE ro.departure_time = #{routeTime} AND ro.trainid = #{trainid}
		ORDER BY ro.departure_time LIMIT #{start}, #{itemsPerPage}
	</select>
	<select id="getRsvdfn" resultType="com.example.demo.dto.ReservDto">
		SELECT r.*, ro.* FROM reservlist r JOIN routes ro ON r.routeid = ro.routeid
		WHERE ro.departure_time = #{routeTime} AND ro.trainid = #{trainid}
		GROUP BY ro.routeid ORDER BY ro.departure_time
	</select>
	<!-- <select id="getState" resultType="Integer">
		SELECT COALESCE((SELECT state FROM payments WHERE reservid = #{reservid}), 2);
	</select> -->
	<select id="getTotalReserv" resultType="int">
		SELECT COUNT(*) FROM (SELECT r.reservid FROM reservlist r JOIN routes ro
		ON r.routeid = ro.routeid WHERE ro.departure_time = #{routeTime}
		AND ro.trainid = #{trainid} GROUP BY r.userid) AS grouped_reservations
	</select>
	
	<!-- 월별 예약 통계 쿼리 -->
	<select id="getMonthLabels" resultType="String">
		SELECT DISTINCT DATE_FORMAT(reservday, '%Y-%m') AS month FROM reservlist ORDER BY month;
	</select>
	<select id="getMonthRsv" resultType="Integer">
		SELECT COUNT(*) FROM reservlist GROUP BY DATE_FORMAT(reservday, '%Y-%m') ORDER BY DATE_FORMAT(reservday, '%Y-%m');
	</select>
	<!-- 행선지별 예약 통계: 도착역을 라벨로 출력 -->
	<select id="getRouteLabels" resultType="String">
		SELECT DISTINCT ro.arrival FROM reservlist r JOIN routes ro ON r.routeid = ro.routeid;
	</select>
	<!-- 행선지별 예약 통계: 도착지별 예약 수를 출력 -->
	<select id="getRouteRsv" resultType="Integer">
		SELECT COUNT(*) FROM reservlist r JOIN routes ro ON r.routeid = ro.routeid GROUP BY ro.arrival;
	</select>
	
	<select id="getRsvcPay" resultType="map">
		SELECT r.*, ro.*, DATE_FORMAT(ro.departure_time, '%Y-%m-%d %H:%i:%s') AS departureTime,
		DATE_FORMAT(ro.arrival_time, '%Y-%m-%d %H:%i:%s') as arrivalTime,
		DATE_FORMAT(r.reservday, '%Y-%m-%d %H:%i:%s') AS reservationDate, r.charge
		FROM reservlist r JOIN routes ro ON r.routeid = ro.routeid WHERE r.PNR = #{PNR}
	</select>
	<select id="getReservSeatInfo" resultType="map" parameterType="map">
		SELECT ts.seatnum FROM reservlist r JOIN trainseat ts ON r.reservid = ts.resid WHERE r.PNR = #{PNR}
	</select>
	<update id="chargeOk" parameterType="com.example.demo.dto.ReservDto">
		update reservlist set payment=1, state=1 where PNR=#{PNR}
	</update>
	<insert id="payOk" parameterType="com.example.demo.dto.ReservDto">
		insert into payments (resid, amount, paydate, paymethod)
		values(#{reservid}, #{charge}, now(), #{sudan})
	</insert>
	
	<select id="getMyrsv" resultType="com.example.demo.dto.ReservDto">
		SELECT * FROM reservlist WHERE userid = #{userid} ORDER BY reservday DESC LIMIT 1
	</select>
	<select id="getMyRsvDetail" resultType="com.example.demo.dto.ReservDto" parameterType="map">
		select r.*, ts.*, ro.* from reservlist r join trainseat ts
		on r.reservid = ts.resid join routes ro on r.routeid = ro.routeid
		where r.pnr=#{PNR} group by r.PNR
	</select>
	<select id="getMyRsvDetailSeat" resultType="com.example.demo.dto.ReservDto" parameterType="map">
		select ts.seatnum from reservlist r join trainseat ts
		on r.reservid = ts.resid join routes ro on r.routeid = ro.routeid
		where r.pnr=#{PNR}
	</select>
	<update id="cancelOffer" parameterType="com.example.demo.dto.ReservDto">
		update reservlist set state=2, offerday=NOW() where PNR=#{PNR}
	</update>
	<select id="getRsvUserid" parameterType="map" resultType="com.example.demo.dto.ReservDto">
		select r.*, ro.* FROM reservlist r JOIN routes ro
		ON r.routeid = ro.routeid WHERE r.userid = #{userid} ORDER BY reservday DESC
		LIMIT #{itemsPerPage} OFFSET #{offset}
	</select>
	<select id="getTresByUser" parameterType="string" resultType="int">
		select count(*) from reservlist where userid = #{userid}
	</select>
	<update id="cancelConfirm" parameterType="com.example.demo.dto.ReservDto">
		update reservlist set state=3 where reservid=#{rid}
	</update>
	<update id="cancelSeat" parameterType="com.example.demo.dto.ReservDto">
		update trainseat set reserv=1, resid=NULL where routeid=#{roid} and resid=#{rid}
	</update>
	<update id="cancelTrainSeat" parameterType="com.example.demo.dto.ReservDto">
		UPDATE routes SET seat=(seat+#{resnum}) WHERE routeid = #{roid}
	</update>
	<update id="cancelRejection" parameterType="com.example.demo.dto.ReservDto">
		update reservlist set state=4 where reservid=#{rid}
	</update>
	<update id="payReturn" parameterType="com.example.demo.dto.ReservDto">
		UPDATE payments p JOIN reservlist r ON p.resid = r.reservid
		SET p.state = 1, r.payment = 2 WHERE p.resid = #{rid};
	</update>
	
</mapper>
